2nd_min-max:
#! /bin/bash -x

function generateRandomNumber() {

randomNumber=$((RANDOM%100 +99))

echo $randomNumber


}

function findSecondLargestAndSmallest() {
randomNumbers=("$@")

largestNumber=${randomNumbers[0]}
secondLargestNumber=${randomNumbers[0]}
smallestNumber=${randomNumbers[0]}
secondSmallestNumber=${randomNumbers[0]}


for ((i=1; i < ${#randomNumbers[@]} ; i++)) 
do
	if [ $largestNumber -lt ${randomNumbers[$i]} ]
	then
		secondLargestNumber=$largestNumber 
		largestNumber=${randomNumbers[i]}
	elif [ $secondLargestNumber -lt  ${randomNumbers[i]} ]
	then
		 secondLargestNumber=${randomNumbers[i]}

	fi
	if [ $smallestNumber -gt ${randomNumbers[i]} ]
        then
                secondSmallestNumber=$smallestNumber
                smallestNumber=${randomNumbers[$i]}
        elif [ $secondSmallestNumber -gt  ${randomNumbers[$i]} ]
        then
                 secondSmallestNumber=${randomNumbers[$i]}

        fi

done

echo "Second Largest number is $secondLargestNumber"
echo "Second Smallest number is $secondSmallestNumber"
}

function storeRandomNumber() {

i=0

while [ $i -lt 10 ]
do
	randomNumberArray[((i++))]=$(generateRandomNumber)
done

echo ${randomNumberArray[@]}

findSecondLargestAndSmallest ${randomNumberArray[@]}
}
storeRandomNumber








=>2nd_min-max_sorted:
#! /bin/bash -x

function generateRandomNumber() {

randomNumber=$((RANDOM%100 +99))

echo $randomNumber


}

function sortTheArray() {
randomNumbers=("$@")


range="${#randomNumbers[@]}"

for (( i = 0; i < ${#randomNumbers[@]}; i++ ))
do
	for (( j = $i; j < ${#randomNumbers[@]}; j++ ))
	do
		if [ ${randomNumbers[$i]} -gt ${randomNumbers[$j]}  ]; then	
			temp=${randomNumbers[$i]}
			randomNumbers[$i]=${randomNumbers[$j]}
			randomNumbers[$j]=$temp
		fi
	done
done
echo "Sorted array is " ${randomNumbers[@]}
echo "Second Largest number is ${randomNumbers[ $(( ${#randomNumbers[@]}-2 )) ]}"
echo "Second Smallest number is ${randomNumbers[1]}"
}

function storeRandomNumber() {

counter=0

while [ $counter -lt 10 ]
do
	randomNumberArray[((counter++))]=$(generateRandomNumber)
done

echo ${randomNumberArray[@]}	

sortTheArray ${randomNumberArray[@]} 
}

storeRandomNumber










=> Prime_factorisation:
#! /bin/bash -x

echo enter no:-
read num
count=0

for (( i=2;i<=num; i++ ))
do
    while [ $((num%$i)) == 0 ]
         do
        primeFactors[((count++))]=$i
        num=$((num/$i))
    done
done
echo "Prime factors of $primeFactorsOf is ${primeFactors[@]}"








=> RANDOM_10NUMBER_3DIGITS:
#! /bin/bash -x

arr=( 0 -1 2 3 -3 1 )
echo "the elements are: "${arr[0]}
len=${#arr[@]}

for (( i=0 ; i<$len-2 ; i++ ))
do 
	for (( j=i+1; j<$len-1 ; j++ ))
	do
		for (( k=j+1 ; k<$len ; k++ ))
		do
			if [ $(( arr[$i]+arr[$j]+arr[$k] )) == 0 ]
			then
				echo -e "${arr[i]} \c"
				echo -e "${arr[j]} \c"	
				echo -e "${arr[k]} \n"
			fi
		done
	done	
done







REPEAT_DIGIT:
#! bin/bash/ -x


count=0
for ((i=10 ; i < 100 ; i++ ))
do
    if [ $((i%10)) -eq   $(((i/10)%10)) ]
    then
        repeatedNumberArray[((count++))]=$i
    fi

done

echo "Repeated number is ${repeatedNumberArray[@]}"






SUM_OF_3INTEGERS_ZERO:
#! /bin/bash -x


arr=( 0 -1 2 3 -3 1 )
echo "the elements are: "${arr[0]}
len=${#arr[@]}

for (( i=0 ; i<$len-2 ; i++ ))
do 
	for (( j=i+1; j<$len-1 ; j++ ))
	do
		for (( k=j+1 ; k<$len ; k++ ))
		do
			if [ $(( arr[$i]+arr[$j]+arr[$k] )) == 0 ]
			then
				echo -e "${arr[i]} \c"
				echo -e "${arr[j]} \c"	
				echo -e "${arr[k]} \n"
			fi
		done
	done	
done
























